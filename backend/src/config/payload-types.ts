/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  collections: {
    users: User;
    media: Media;
    CredentialsForMarketplaces: CredentialsForMarketplace;
    backlinks: Backlink;
    domainsForBackgroundProcess: DomainsForBackgroundProcess;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    CredentialsForMarketplaces: CredentialsForMarketplacesSelect<false> | CredentialsForMarketplacesSelect<true>;
    backlinks: BacklinksSelect<false> | BacklinksSelect<true>;
    domainsForBackgroundProcess: DomainsForBackgroundProcessSelect<false> | DomainsForBackgroundProcessSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  role: 'admin' | 'user';
  username?: string | null;
  profilePicture?: (string | null) | Media;
  authProvider?: string | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  altText?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CredentialsForMarketplaces".
 */
export interface CredentialsForMarketplace {
  id: string;
  email: string;
  password: string;
  secretKey?: string | null;
  websiteTarget: {
    value?:
      | (
          | 'DataForSeo'
          | 'PaperClub'
          | 'Ereferer'
          | 'Link.Builders'
          | 'Prensalink'
          | 'Seojungle'
          | 'Mistergoodlink'
          | 'Boosterlink'
          | 'Linkavista'
          | 'Getalink'
          | 'Develink'
        )
      | null;
    id?: string | null;
  }[];
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "backlinks".
 */
export interface Backlink {
  id: string;
  Domain: string;
  Marketplaces: {
    Marketplace_Source: string;
    Price: number;
    id?: string | null;
  }[];
  RD?: number | null;
  TF?: number | null;
  CF?: number | null;
  TTF?: string | null;
  Title?: string | null;
  Backlinks?: number | null;
  Ref_Ips?: number | null;
  Ref_Edu?: number | null;
  Ref_Gov?: number | null;
  Language?: string | null;
  Ref_Lang?: string | null;
  Expiry_Date?: string | null;
  Date_Fetched: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "domainsForBackgroundProcess".
 */
export interface DomainsForBackgroundProcess {
  id: string;
  Domain: string;
  RD?: number | null;
  TF?: number | null;
  CF?: number | null;
  TTF?: string | null;
  Title?: string | null;
  Backlinks?: string | null;
  Ref_Ips?: string | null;
  Ref_Edu?: string | null;
  Ref_Gov?: string | null;
  Language?: string | null;
  Ref_Lang?: string | null;
  Expiry_Date?: string | null;
  Status: 'pending' | 'processing';
  Created_At: string;
  Updated_At?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'CredentialsForMarketplaces';
        value: string | CredentialsForMarketplace;
      } | null)
    | ({
        relationTo: 'backlinks';
        value: string | Backlink;
      } | null)
    | ({
        relationTo: 'domainsForBackgroundProcess';
        value: string | DomainsForBackgroundProcess;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  role?: T;
  username?: T;
  profilePicture?: T;
  authProvider?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  altText?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CredentialsForMarketplaces_select".
 */
export interface CredentialsForMarketplacesSelect<T extends boolean = true> {
  email?: T;
  password?: T;
  secretKey?: T;
  websiteTarget?:
    | T
    | {
        value?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "backlinks_select".
 */
export interface BacklinksSelect<T extends boolean = true> {
  Domain?: T;
  Marketplaces?:
    | T
    | {
        Marketplace_Source?: T;
        Price?: T;
        id?: T;
      };
  RD?: T;
  TF?: T;
  CF?: T;
  TTF?: T;
  Title?: T;
  Backlinks?: T;
  Ref_Ips?: T;
  Ref_Edu?: T;
  Ref_Gov?: T;
  Language?: T;
  Ref_Lang?: T;
  Expiry_Date?: T;
  Date_Fetched?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "domainsForBackgroundProcess_select".
 */
export interface DomainsForBackgroundProcessSelect<T extends boolean = true> {
  Domain?: T;
  RD?: T;
  TF?: T;
  CF?: T;
  TTF?: T;
  Title?: T;
  Backlinks?: T;
  Ref_Ips?: T;
  Ref_Edu?: T;
  Ref_Gov?: T;
  Language?: T;
  Ref_Lang?: T;
  Expiry_Date?: T;
  Status?: T;
  Created_At?: T;
  Updated_At?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}